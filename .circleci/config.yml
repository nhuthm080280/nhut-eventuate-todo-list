#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: cimg/openjdk:8.0.282-browsers
        auth:
          username: nhuthuynhdocker
          password: "@bc123456"
#    machine: true

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx256m
      TERM: dumb

    steps:
      - checkout
      - setup_remote_docker:
          version: 19.03.13
          docker_layer_caching: false
      # Download and cache dependencies
      - restore_cache:
          keys:
          - eventuate-examples-java-spring-todo-list-{{ checksum "multi-module/gradle.properties" }}
          # fallback to using the latest cache if no exact match is found
          - eventuate-examples-java-spring-todo-list-

      # - run: cd single-module && ./gradlew dependencies
      - run: cd multi-module && ./gradlew dependencies
      - run: cd multi-module && ./gradlew clean build -x test
      - run:
          name: Assemble JAR
          command: |
            # Skip this for other nodes
            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
              cd multi-module && ./gradlew assemble -P eventuateDriver=local
            fi
            # As the JAR was only assembled in the first build container, build/libs will be empty in all the other build containers.
      - store_artifacts:
          path: multi-module/todo-service/build/libs
      - save_cache:
          paths:
            - ~/.m2
            - ~/.gradle
          key: eventuate-examples-java-spring-todo-list-{{ checksum "multi-module/gradle.properties" }}

      # run tests!
      # - run: cd single-module && ./build-and-test-all-eventuate-local-mysql.sh
      # - run: cd single-module && ./build-and-test-all-eventuate-local-postgres-polling.sh
      # - run: cd single-module && ./build-and-test-all-eventuate-local-postgres-wal.sh
      # - run: cd multi-module && ./build-and-test-all-eventuate-local-mysql.sh
      # - run: cd multi-module && ./build-and-test-all-eventuate-local-postgres-wal.sh
      # - run: cd multi-module && ./build-and-test-all-eventuate-local-postgres-polling.sh
